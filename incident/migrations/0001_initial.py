# Generated by Django 5.1.3 on 2025-06-24 00:40

import django.db.models.deletion
import geoposition.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=200, null=True)),
                ("what", models.TextField(verbose_name="What Happened")),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Incident"
                    ),
                ),
                (
                    "time",
                    models.TimeField(
                        blank=True,
                        null=True,
                        verbose_name="Approximate Time of Incident",
                    ),
                ),
                (
                    "timestr",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Approximate Time of Incident",
                    ),
                ),
                (
                    "vehicle_description",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Vehicle Description -- please fill this out!",
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=30, null=True)),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "license_certain",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="License Plate - CERTAIN",
                    ),
                ),
                (
                    "license_uncertain",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="License Plate - UNCERTAIN",
                    ),
                ),
                (
                    "id_it_by",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Identifying Characteristics",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "position",
                    geoposition.fields.GeopositionField(max_length=42, null=True),
                ),
                ("latitude", models.FloatField(null=True)),
                ("longitude", models.FloatField(null=True)),
                (
                    "witnesses",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Your Name and Names of other Witnesses ( this field is not published )",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("reported", models.BooleanField(default=False)),
                ("cited", models.BooleanField(default=False)),
                ("cited_note", models.TextField(blank=True, null=True)),
                ("warned", models.BooleanField(default=False)),
                ("warned_note", models.TextField(blank=True, null=True)),
                ("email_sent", models.BooleanField(default=False)),
                ("email_text", models.TextField(blank=True, null=True)),
                ("email_sent_on", models.DateTimeField(blank=True, null=True)),
                ("internal_note", models.TextField(blank=True, null=True)),
                ("reviewed", models.BooleanField(default=False)),
                ("accepted", models.BooleanField(default=True)),
                ("closedfirstloop", models.BooleanField(default=False)),
                ("pending", models.BooleanField(default=False)),
                ("pending_note", models.TextField(blank=True, null=True)),
                (
                    "youtube_url",
                    models.CharField(blank=True, max_length=180, null=True),
                ),
                ("vimeo_url", models.CharField(blank=True, max_length=180, null=True)),
                (
                    "facebook_url",
                    models.CharField(blank=True, max_length=180, null=True),
                ),
                ("video_embed_string", models.TextField(blank=True)),
                (
                    "video_offensive_votes",
                    models.IntegerField(default=0, verbose_name="Offensive"),
                ),
                ("show_video", models.BooleanField(default=True)),
                ("ee_show_video", models.BooleanField(default=False)),
                (
                    "utility",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=4, null=True
                    ),
                ),
                (
                    "utility_comment",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Utility Comment",
                    ),
                ),
                (
                    "utility_defect",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Utility Defect",
                    ),
                ),
                ("driver_fault", models.IntegerField(blank=True, null=True)),
                ("has_video", models.BooleanField(default=False)),
                ("has_pic", models.BooleanField(default=False)),
                (
                    "threat_assessment",
                    models.CharField(
                        choices=[
                            (
                                "Belligerent",
                                "Belligerent - the driver was malicious and undertook deliberate actions that purposefully put lives at risk",
                            ),
                            (
                                "Threatening",
                                "Threatening - the driver create a dangerous situation and delivered a measured threat (close, but not too close)",
                            ),
                            (
                                "Aggressive",
                                "Aggressive - the driver was trying to scare, harass or intimidate (yelled, honked, etc)",
                            ),
                            (
                                "Careless",
                                "Careless - the driver caused a problem but it wasnt deliberately hostile and may have been accidental",
                            ),
                            ("Thoughtless", "Just Plain Stupid"),
                        ],
                        default="Aggressive",
                        max_length=50,
                        null=True,
                        verbose_name="Threat Assessment",
                    ),
                ),
                (
                    "danger_assessment",
                    models.IntegerField(
                        choices=[
                            (
                                10,
                                "Extremely Dangerous - The action could have caused a fatility",
                            ),
                            (
                                8,
                                "Very Dangerous - The action could have caused serious injury or death",
                            ),
                            (
                                5,
                                "Dangerous - the action could have caused serious injury",
                            ),
                            (
                                3,
                                "Somewhat Dangerous - the action could have caused moderate injuries",
                            ),
                            (
                                1,
                                "The action was not very dangerous, but is still a cause for concern",
                            ),
                        ],
                        default=5,
                        null=True,
                        verbose_name="Danger Assessment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident",
                "verbose_name_plural": "Incidents",
                "ordering": ["-date"],
            },
        ),
    ]
