
=== QUICK BACKUP OF REMOTE DB LOCALLY ======

open terminal on local machine
cd /Users/eae/backups/closecalldatabase
pg_dump -h closecalldatabase.com -p 5432 closecall > closecall.bak
password: 'PG******!'

## *** now get the binary tarball that is BEST FOR A RESTORE

pg_dump -h closecalldatabase.com -p 5432 -Ft closecall > closecall.tar
password: 'PG******!'
           PG314159!
============================================



sudo service postgresql start/stop/status/restart


#to run psql -- use password from settings.py
$ psql -h localhost closecall eaecc


-- start psql as postgres superuser
(closecall)eezis@closecall:~/sites/closecall$ sudo su - postgres
postgres@closecall:~$ psql

list
# backup
# connect to ssh
eezis@closecall:~$
eezis@closecall:~$ sudo -u postgres pg_dump closecall > /home/eezis/closecall.sql  <- text back up
eezis@closecall:~$ sudo -u postgres pg_dump -Ft closecall > /home/eezis/closecall.tar # tarball is BEST FOR A RESTORE


sudo -u eae pg_dump -h closecalldatabase.com -p 5432 closecall > closecall.bak


***
pg_dump -h closecalldatabase.com -p 5432 closecall > closecall.bak


=======================================
local backup of remote db - FIRST TIME - SETUP
=======================================

-- 1. to prepare, on remote ubuntu machine I started psql as the postgres superuser
-- then on my machine, I am user eae when I am at the command line
-- so I need to create an 'eae' user role for the remot postgres because when I use pg_dump from my local
-- command line, it will be as the 'eae' user

$ sudo su - postgres
postgres@closecall:~$ psql
postgres=# CREATE ROLE eae SUPERUSER;
postgres=# ALTER ROLE eae LOGIN;
postgres=# ALTER USER eae WITH ENCRYPTED PASSWORD 'PG******!';  [the stars = think geometry]

-- 2. now get the backup

open terminal on local machine
cd /Users/eae/backups/closecalldatabase
pg_dump -h closecalldatabase.com -p 5432 closecall > closecall.bak
password: 'PG******!'

## *** now get the binary tarball that is BEST FOR A RESTORE

pg_dump -h closecalldatabase.com -p 5432 -Ft closecall > closecall.tar
password: 'PG******!'





==============================
 TECHNICAL ISSUES PROBLEMS
==============================

    1/9/14 -- someone entered an incident report without a location. Position was none. It threw an Attribute error here in core.views homeview
    Local_I = request.user.profile.get_user_incidents()


    def HomeView(request):
        if request.user.is_authenticated():

            I = Incident.objects.filter(user=request.user)
            N = InTheNews.objects.all().values('title','url', 'tldr')[:5]
            # Local_I = Local Incidents
            try:
                Local_I = request.user.profile.get_user_incidents()  <----------------*** THE PROBLEM WAS HERE ***
                # Latest_I = Latest Incidents (most recent) -- might want to modify to get the most recent *dangeruous* instances
                Recent_I = Incident.objects.filter(visible=True).order_by('-id')[:10]
                return render(request, 'home.html', {'incidents': I, 'news_stories': N, 'local_incidents': Local_I, 'recent_incidents': Recent_I})
            except AttributeError:


    that redirected to a create profile page: return HttpResponseRedirect('/create-user-profile/') So users tried again and got the following error:

    IntegrityError: duplicate key value violates unique constraint “users_userprofile_user_id_key” DETAIL: Key (user_id)=(1350) already exists.


So connect to the server, run psql, set the MAX(id) for +1 or more

#to run psql -- use password from settings.py
$ psql -h localhost closecall eaecc


closecall=> \connect closecall
closecall=> SELECT setval('users_userprofile_id_seq', (SELECT MAX(id) FROM users_userprofile)+1);
 setval
--------
   1374
(1 row)

closecall=> (SELECT MAX(id) FROM users_userprofile);
 max
------
 1369
(1 row)


Once that was done, I still had to find and fix the position = None issue.




=======================================================================================
Making postgres accessible to remote client [digital ocean Postgres 9.3, Ubuntu 12.04]
=======================================================================================

-- go to the config files

cd /etc/postgresql/9.3/main

-- edit the postgresql.conf

sudo nano postgresql.conf
#listen_addresses = 'localhost,73.203.118.43' <-- did not work, had to use '*'
listen_addresses = '*'

-- edit the pg_hba.conf

sudo nano pg_hba.conf

# IPv4 local connections:
host    all             all             127.0.0.1/32            md5
host    all             all             73.203.118.43/32        md5  <-- I added this line

-- now restart postgresql

sudo service postgresql restart


### NOW THE FIREWALL, iptables

-- list current

$ sudo iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination

-- add a rule to get to postgresql

sudo iptables -A INPUT -p tcp --destination-port 5432 -s 73.203.118.43 -j ACCEPT
sudo iptables -A INPUT -p tcp --destination-port 5432 -s 24.9.60.175 -j ACCEPT

-- now test it from terminal on the remote workstation

psql -h closecalldatabase.com -U eaecc -d closecall

-- okay that worked, one more thing  MAKE THE IPTABLE PERSISTENT!

sudo apt-get install iptables-persistent
sudo service iptables-persistent start


MAC OSX, postgres users is "underscorePostgres" --> _postgres

ALTER USER _postgres WITH ENCRYPTED PASSWORD 'password';




================================================================
how to find pg_hba.conf postrges configuration file (this was on the Mac,
where the postgresapp placed it someone I didn't expect/know about)
================================================================

closecalldatabase $ psql
psql (9.3.1)
Type "help" for help.

eae=# SHOW hba_file;
                             hba_file
-------------------------------------------------------------------
 /Users/eae/Library/Application Support/Postgres93/var/pg_hba.conf
(1 row)



