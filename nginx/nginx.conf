# worker_processes 1;
# http://www.revsys.com/12days/nginx-tuning/
worker_processes auto;

# user nobody nogroup;
user www-data;
pid /var/run/nginx.pid;

error_log /etc/nginx/nginx.error.log;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {

    include mime.types;
    error_log  /var/log/nginx/ccdb.error.log;
    access_log  /var/log/nginx/ccdb.access.log;
    sendfile on;

    # http://www.revsys.com/12days/front-end-performance/
    gzip on;
    gzip_disable "msie6";
    gzip_min_length 1000;
    gzip_http_version 1.0;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # HARDENING :: if no host header is set, the connection will be closed
    # immediately (there is no "server_name" specified in the request)
    # server {
    #     listen 80;
    #     return 444;
    # }

    # HARDENING :: turns off version numbers in error pages & response headers
    server_tokens off;

    # This was the http configuration up until 1/21/17, replaced it with the code below
    # to add SSL
    # server {
    #     listen       80;
    #     server_name  www.closecalldatabase.com;
    #     return       301 http://closecalldatabase.com$request_uri;
    # }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name closecalldatabase.com www.closecalldatabase.com;
            return 301 https://$server_name$request_uri;
        }

    server {

        # listen 80;
        # SSL CHANGE - commented above line, added the lines below
        # https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        include snippets/ssl-example.com.conf;
        include snippets/ssl-params.conf;

        # # THIS WORKS BUT IS UNSIGNED SO FLASHES SCARY MESSAGE, I NEED TO BUY A COMMERCIAL THAN
        # # DO THIS: the NGINX SECTION https://www.digitalocean.com/community/tutorials/how-to-install-an-ssl-certificate-from-a-commercial-certificate-authority
        # listen 443 ssl;
        # # ssl on;
        # ssl_certificate /etc/nginx/ssl/server.crt;
        # ssl_certificate_key /etc/nginx/ssl/server.key;


        # server_name  www.closecalldatabase.com;
        # return       301 http://closecalldatabase.com$request_uri;

        client_max_body_size 2G;
        server_name .closecalldatabase.com;
        keepalive_timeout 5;

        # path for static files
        # root /path/to/app/current/public;
        # the following does not serve the static files properly
        # root /home/eezis/sites/static/closecall;

        root /home/eezis/sites/closecall/nginx-root;

        # adding HTTPS SSL via letsencrypt
        # https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
        location ~ /.well-known {
                allow all;
        }


        # In the next example if neither the original URI, nor the URI with the appended trailing slash,
        #resolve into an existing file or directory, the request is redirected to the named location
        #which passes it to a proxied server.
        location / {
            try_files $uri @backend;
        }

        location @backend {
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:8000;
        }

        # location / {
        #     proxy_pass http://127.0.0.1:8000;
        # }

        location /static/ {
            # autoindex on;
            alias /home/eezis/sites/closecall/nginx-root/static/;
            expires 1h;
        }
    }
}

